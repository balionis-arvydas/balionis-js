plugins {
    id 'org.springframework.boot' version '2.0.1.RELEASE'
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'

group = 'com.balionis'
version = APP_VERSION
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: '2.0.1.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.0.1.RELEASE'

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.8.+'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.0.1.RELEASE'
}

def webappDir = "$projectDir/src/main/webapp"
sourceSets {
    main {
        resources {
            srcDirs = ["$webappDir/dist", "$projectDir/src/main/resources"]
        }
    }
}

clean {
    delete "$webappDir/dist"
    delete "$projectDir/out"
}

processResources {
    dependsOn "ngBuild"
}

jar {
    manifest {
        attributes 'Implementation-Title': rootProject.name,
                   'Implementation-Version': version
    }
}

// gradle build
test {
    systemProperties 'property': 'value'
    dependsOn "ngTest"
}

// gradle --console=plain clean test bootJar
bootJar {
    mainClassName = 'com.balionis.angular1.restful.AppRunner'
}

// gradle install
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: LOCAL_MAVEN_REPOSITORY)
        }
    }
}

task ngBuild(type:Exec) {
    // dependsOn "ngInstall"
    workingDir "$webappDir"
    inputs.dir "$webappDir"
    group = BasePlugin.BUILD_GROUP
    //	outputs.dir "$webappDir/dist"
    if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
        commandLine "cmd","/c","ng.cmd build"
    } else {
        commandLine "ng", "build"
    }
}

task ngTest(type:Exec) {
    // dependsOn "ngBuild"
    workingDir "$webappDir"
    inputs.dir "$webappDir"
    group = BasePlugin.BUILD_GROUP
    //	outputs.dir "$webappDir/dist"
    if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
        commandLine "cmd","/c","ng.cmd test"
    } else {
        commandLine "ng", "test"
    }
}

task ngClean(type: Delete) {
    delete "$webappDir/node_modules"
}

task ngInstall(type:Exec) {
    workingDir "$webappDir"
    inputs.dir "$webappDir"
    group = BasePlugin.BUILD_GROUP
    //	outputs.dir "$webappDir/dist"
    if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
        commandLine "cmd","/c","npm.cmd install"
    } else {
        commandLine "npm", "install"
    }
}

// gradle run -Dprofile=prod -Dexec.args="--server.port=8090"
task run (type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'com.balionis.angular1.restful.AppRunner'

    /* Or just each by name: */
    systemProperty "spring.profiles.active", System.getProperty("profile")

    /* Need to split the space-delimited value in the exec.args */
    if (System.getProperty("exec.args") != null) {
        args System.getProperty("exec.args").split()
    }
}